{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAjCIQ,SAASC,cAAe,SAEhCC,iBAAkB,UAEvB,SAAkBC,GAChBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAQC,OAAOH,EAAII,cAAcf,MAAMgB,OACrCC,EAAOH,OAAOH,EAAII,cAAcE,KAAKD,OACrCE,EAASJ,OAAOH,EAAII,cAAcG,OAAOF,OAEtCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBJ,EAAA0B,OAAOC,QAAQ,sBAAuCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE7DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBJ,EAAA0B,OAAOI,QAAQ,qBAAsCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE/Da,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport '../css/03-promises.css';\nconst form = document.querySelector(`.form`)\n\nform.addEventListener(`submit`, onSubmit)\n\nfunction onSubmit(evn) {\n  evn.preventDefault();\n\n  let delay = Number(evn.currentTarget.delay.value);\n  const step = Number(evn.currentTarget.step.value);\n  const amount = Number(evn.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n      } else {\n          reject({ position, delay });\n      }\n      }, delay)\n    });\n  }\n\n\n/*Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n  \nДоповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.*/"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evn","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.12f52ffd.js.map"}