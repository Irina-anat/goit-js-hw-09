{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjCFQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAEJ,IAAIC,EAAQC,OAAOH,EAAII,cAAcf,MAAMgB,OAC3C,MAAMC,EAAOH,OAAOH,EAAII,cAAcE,KAAKD,OACrCE,EAASJ,OAAOH,EAAII,cAAcG,OAAOF,OAE/C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAyB,OAAOC,QAAQ,sBAAoBvB,QAAiBC,MAAU,IAE/DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAyB,OAAOG,QAAQ,qBAAmBzB,QAAiBC,MAAU,IAEjEa,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport '../css/03-promises.css';\nconst form = document.querySelector(`.form`)\n\nform.addEventListener(`submit`, onSubmit)\n\nfunction onSubmit(evn) {\n  evn.preventDefault();\n\n  let delay = Number(evn.currentTarget.delay.value);\n  const step = Number(evn.currentTarget.step.value);\n  const amount = Number(evn.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n      } else {\n          reject({ position, delay });\n      }\n      }, delay)\n    });\n  }\n\n\n/*Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n  \nДоповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.*/"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evn","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.9cf8f242.js.map"}